#!/usr/bin/env node
// express 세부 설정등한 객체를 모듈로 가져와서 서버 가동 쪽만 구현 한다.
var app   = require('../app');
var debug = require('debug')('Hrdemo:server');
var http  = require('http');
// 포트
var port = normalizePort(process.env.PORT || '5000');
app.set('port', port);
// 서버 생성
var server = http.createServer(app);
// 포트 등록 및 서버 가동
server.listen(port);
// 에러 등록
server.on('error', onError);
// 리스너 등록
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
